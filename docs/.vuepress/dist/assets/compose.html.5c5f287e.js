import{_ as e,o as t,c as n,g as r}from"./app.c10353cc.js";const s={},c=r('<h4 id="\u7406\u89E3\u51FD\u6570\u7EC4\u5408-compose-\u53CA\u4E2D\u95F4\u4EF6\u5B9E\u73B0" tabindex="-1"><a class="header-anchor" href="#\u7406\u89E3\u51FD\u6570\u7EC4\u5408-compose-\u53CA\u4E2D\u95F4\u4EF6\u5B9E\u73B0" aria-hidden="true">#</a> \u7406\u89E3\u51FD\u6570\u7EC4\u5408\uFF08compose\uFF09\u53CA\u4E2D\u95F4\u4EF6\u5B9E\u73B0</h4><p>\u7B80\u4ECB\uFF1A \u5C06\u7B80\u5355\u7684\u51FD\u6570\u7EC4\u5408\u6210\u53EF\u4EE5\u5B8C\u6210\u590D\u6742\u4EFB\u52A1\u7684\u51FD\u6570\u7684\u8FC7\u7A0B</p><ol><li><p>\u5B9E\u73B0\uFF1A \u4E00\u4E2A\u51FD\u6570\u53EF\u63A5\u53D7\u4E24\u4E2A\u51FD\u6570\u7C7B\u578B\u7684\u53C2\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\uFF0C\u53EF\u4F20\u5165\u4E00\u4E2A\u53C2\u6570 \u6267\u884C\u8FD4\u56DE\u7684\u51FD\u6570\uFF0C\u53EF\u5148\u6267\u884C\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u5C06\u5176\u7ED3\u679C\u5F53\u6210\u7B2C\u4E00\u4E2A\u53C2\u6570\u7684\u53C2\u6570\u4F20\u5165\u7B2C\u4E00\u4E2A\u53C2\u6570,\u6700\u540E\u5C06\u7ED3\u679C\u8FD4\u56DE</p></li><li><p>\u4EE3\u7801\uFF1A \u7B80\u7248\uFF1A\u53C2\u6570\u56FA\u5B9A function compose(f,g){ return function(x){ return f(g(x)) } }</p></li><li><p>\u590D\u6742\u7248\uFF1A\u53C2\u6570\u4E0D\u56FA\u5B9A\uFF0C\u987A\u5E8F\u53EF\u8C03 // \u5B9E\u73B0\u7BA1\u9053 const pipe = (...fns) =&gt; (value) =&gt; fns.reduce((acc, fn) =&gt; fn(acc), value) // reduceRight\u5B9E\u73B0 const compose = (...fns) =&gt; (value) =&gt; fns.reduceRight((acc, fn) =&gt; fn(acc), value)</p></li><li><p>\u5B9E\u9645\u5E94\u7528\uFF1A lodash.js flow flowRight function flowRight(...funcs) { return flow(...funcs.reverse()); } // flow.js function flow(...funcs) { const length = funcs.length let index = length while (index--) { if (typeof funcs[index] !== &#39;function&#39;) { throw new TypeError(&#39;Expected a function&#39;) } } return function(...args) { let index = 0 let result = length ? funcs[index].apply(this, args) : args[0] while (++index &lt; length) { result = funcs[index].call(this, result) } return result } } underscore.js function compose(){ var args = arguments; var start = args.length - 1; return function(){ var i = start; var result = args[i].apply(this,arguments); while(i--) result = args[i].call(this,result); return result; }<br> }</p></li></ol>',3),l=[c];function o(i,a){return t(),n("div",null,l)}var f=e(s,[["render",o],["__file","compose.html.vue"]]);export{f as default};
