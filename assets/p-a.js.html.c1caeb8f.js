import{_ as e,r as o,o as c,c as l,b as n,a,w as t,f as i,e as p}from"./app.f25adddd.js";const u={},k={class:"table-of-contents"},r=p("Async\u5E94\u7528"),d=p("asyncPool"),m=p("async promise \u7EC8\u6781\u9898\u76EE"),v=i(`<h2 id="async\u5E94\u7528" tabindex="-1"><a class="header-anchor" href="#async\u5E94\u7528" aria-hidden="true">#</a> Async\u5E94\u7528</h2><h3 id="asyncpool" tabindex="-1"><a class="header-anchor" href="#asyncpool" aria-hidden="true">#</a> asyncPool</h3><ul><li>\u6838\u5FC3\u601D\u8DEF\u662F <ul><li>\u4E00\u4E2A\u603B\u6570\u7EC4\u7528\u6765\u5B58\u653E\u6240\u6709\u5F02\u6B65\u8BF7\u6C42\u7684promise</li><li>\u4E00\u4E2A\u6267\u884C\u6570\u7EC4\u7528\u6765\u5B58\u653E\u5F53\u524D\u5DF2\u7ECF\u53D1\u9001\u5F02\u6B65\u8BF7\u6C42\u7684promise\uFF0C\u5F53\u5B8C\u6210\u4E00\u4E2A(race\u53EF\u4EE5\u77E5\u9053\u54EA\u4E2A\u5148\u5B8C\u6210)\u5C06\u5176\u4ECE\u6570\u7EC4\u5254\u51FA\uFF0C\u52A0\u5165\u4E0B\u4E00\u4E2A</li><li>await\u5B9E\u73B0\u4E86\u6682\u505Cfor\u5FAA\u73AF\u7684\u673A\u5236\uFF0C\u4F7F\u5F97\u6267\u884C\u6570\u7EC4\u4EC5\u540C\u65F6\u4EC5\u652F\u6301limit\u4E2A\u8BF7\u6C42</li><li>Promise.all\u8FD4\u56DE\u6240\u6709\u6210\u529F\u6570\u7EC4</li></ul></li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u9700\u6C42\u4E00\uFF1A \u5B9E\u73B0\u4E00\u4E2A\u5E76\u53D1\u8BF7\u6C42\u961F\u5217\uFF0C\u6BCF\u6B21\u6700\u591A\u80FD\u5E76\u53D1poolLimit\u6B21\uFF0C\u8BF7\u6C42\u5B8C\u4E00\u4E2A\u4F1A\u63A8\u5165\u65B0\u7684\u8BF7\u6C42\uFF0C\u5E76\u4E14\u80FD\u6309\u4E4B\u524D\u961F\u5217\u987A\u5E8F\u8F93\u51FA\u7ED3\u679C</span>
<span class="token keyword">const</span> <span class="token function-variable function">curl</span> <span class="token operator">=</span> <span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F00\u59CB&#39;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u7ED3\u675F&#39;</span> <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">1000</span> <span class="token operator">+</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">1000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> urls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>i<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> i<span class="token punctuation">)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>urls<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asyncPool</span><span class="token punctuation">(</span>poolLimit<span class="token punctuation">,</span>array<span class="token punctuation">,</span>iteratorFn<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ret <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> executing <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> 
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> array<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">iteratorFn</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// \u5C06\u5F02\u6B65\u8BF7\u6C42\u52A0\u5165\u5FAE\u89C2\u961F\u5217\uFF0C\u5FAE\u89C2\u961F\u5217\u6267\u884C\u624D\u53D1\u9001\u8BF7\u6C42</span>
    ret<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span> 
    <span class="token keyword">if</span> <span class="token punctuation">(</span>poolLimit<span class="token operator">&lt;=</span>array<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> e <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span> executing<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>executing<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//\u5173\u952E\u6B65\u9AA4\uFF0C\u5B8C\u6210\u540E\u5C06\u81EA\u5DF1\u4ECE\u6267\u884C\u961F\u5217\u4E2D\u629B\u51FA\u6765</span>
      executing<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> 
      <span class="token keyword">if</span> <span class="token punctuation">(</span>executing<span class="token punctuation">.</span>length <span class="token operator">&gt;=</span> poolLimit<span class="token punctuation">)</span> <span class="token punctuation">{</span> 
        <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span>executing<span class="token punctuation">)</span>  <span class="token comment">// \u7B49\u5F85\u54EA\u4E2Ae\u7684\u72B6\u6001\u5148\u6539\u4E3Afulled</span>
        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u81F3\u6B64\u524D\u97627\u4E2A\u90FD\u5DF2\u7ECFresolve\u5B8C\u6210\u7684\u4E86\uFF0C</span>
  <span class="token keyword">return</span> <span class="token builtin">Promise</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span> <span class="token comment">// \u7B49\u5F85\u540E\u9762\u4E09\u4E2A\u5B8C\u6210\u4E86\uFF0C\u8FD4\u56DE\u4E00\u4E2Avalue\u4E3A\u6570\u7EC4\u7684promise</span>
<span class="token punctuation">}</span>
<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">asyncPool</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>urls<span class="token punctuation">,</span>curl<span class="token punctuation">)</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// async function asyncPool(poolLimit,array,iteratorFn) {</span>
<span class="token comment">//   const ret = []</span>
<span class="token comment">//   const executing = [] // \u6267\u884C\u961F\u5217</span>
<span class="token comment">//   for (const item of array) {</span>
<span class="token comment">//     const p = Promise.resolve().then(()=&gt;iteratorFn(item)) // \u5C06\u5F02\u6B65\u8BF7\u6C42\u52A0\u5165\u5FAE\u89C2\u961F\u5217\uFF0C\u5FAE\u89C2\u961F\u5217\u6267\u884C\u624D\u53D1\u9001\u8BF7\u6C42</span>
<span class="token comment">//     ret.push(p) // p\u7684\u72B6\u6001\u662Fpending</span>
<span class="token comment">//     if (poolLimit&lt;=array.length) {</span>
<span class="token comment">//       // \u5173\u952E\u6B65\u9AA4\uFF0C\u5B8C\u6210\u540E\u5C06\u81EA\u5DF1\u4ECE\u6267\u884C\u961F\u5217\u4E2D\u629B\u51FA\u6765</span>
<span class="token comment">//       const e = p.then(()=&gt; executing.splice(executing.indexOf(e),1)) //p\u7684\u72B6\u6001\u662Fpending,\u5C06\u56DE\u8C03\u4E22p\u7684\u56DE\u8C03\u961F\u5217\u4FDD\u5B58\u8D77\u6765\uFF0C\u8FD4\u56DE\u7684e\u4E5F\u662Fpending\u72B6\u6001</span>
<span class="token comment">//       executing.push(e) // e\u7684\u72B6\u6001\u662Fpending</span>
<span class="token comment">//       if (executing.length &gt;= poolLimit) { // \u6267\u884C\u961F\u5217 \u591A\u4E8E\u9650\u5236\u957F\u5EA6\uFF0C\u5F00\u59CB\u7B49\u5F85</span>
<span class="token comment">//         // \u7B49\u5F85\u5FAE\u89C2\u4EFB\u52A1\u961F\u5217\u7684\u8BF7\u6C42\u5B8C\u6210\uFF0C\u5F53\u8C01\u5148\u5B8C\u6210\uFF0Cresolve\u8C01\uFF0C\u8FDB\u5165\u4E0B\u4E00\u4E2A\u5FAA\u73AF\uFF0C\u629B\u51FA\u4E4B\u524D\u5B8C\u6210\u7684p\uFF0C\u63A8\u5165\u65B0p</span>
<span class="token comment">//         var a = await Promise.race(executing) // \u7B49\u5F85\u54EA\u4E2Ap\u7684\u72B6\u6001\u5148\u6539\u4E3Afulled\uFF0C\u5C06e\u7684\u72B6\u6001\u6539\u4E3Afulled\uFF0C\u6267\u884C\u629B\u51FA\u51FD\u6570\uFF0C\uFF0C\u6700\u540E\u8FD4\u56DE\u7684promise\u662Ffulled\u72B6\u6001\u7684\uFF0Cvalue</span>
<span class="token comment">//         console.log(a);</span>
<span class="token comment">//       }</span>
<span class="token comment">//     }</span>
<span class="token comment">//   }</span>
<span class="token comment">//   console.log(ret); // \u81F3\u6B64\u524D\u97627\u4E2A\u90FD\u5DF2\u7ECFresolve\u5B8C\u6210\u7684\u4E86\uFF0C</span>
<span class="token comment">//   return Promise.all(ret) // \u7B49\u5F85\u540E\u9762\u4E09\u4E2A\u5B8C\u6210\u4E86\uFF0C\u8FD4\u56DE\u4E00\u4E2Avalue\u4E3A\u6570\u7EC4\u7684promise</span>
<span class="token comment">// }</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="async-promise-\u7EC8\u6781\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#async-promise-\u7EC8\u6781\u9898\u76EE" aria-hidden="true">#</a> async promise \u7EC8\u6781\u9898\u76EE</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1 start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6267\u884C2</span>
  <span class="token keyword">await</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async1 end&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">async2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async2 start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6267\u884C3</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;async2 promise&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6267\u884C4</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span> 
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;script start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u6267\u884C1</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;setTimeout&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5B8F1</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token function">async1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;promise3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;script end&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6267\u884C\u961F\u5217</span>
<span class="token comment">//script start</span>
<span class="token comment">//async1 start</span>
<span class="token comment">//async2 start</span>
<span class="token comment">//async2 promise</span>
<span class="token comment">//promise1</span>
<span class="token comment">//script end</span>
<span class="token comment">//promise2</span>
<span class="token comment">//promise3</span>
<span class="token comment">//async1 end</span>
<span class="token comment">//</span>
<span class="token comment">//setTimeout</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary>\u8BE6\u89E3</summary><ul><li><p>\u5FAE\u961F\u5217\uFF1A</p><ul><li>async2_next2,\u5373async2\u7684\u7B2C\u4E00\u4E2Anext\u5F00\u542F\u7684\u5FAE\u4EFB\u52A1\uFF0C\u5B83\u7684\u72B6\u6001\u662Fresolve\uFF0C\u90A3\u4E48\u5C06\u7B2C\u4E8C\u4E2Anext\u7684\u6267\u884C\u653E\u5FAE\u4EFB\u52A1\u961F\u5217</li><li>promise2</li><li>promise3</li><li>async1_next2</li><li>async1 end</li></ul></li><li><p>\u5B8F\u961F\u5217\uFF1A</p><ul><li>setTimeout</li></ul></li><li><p>\u6CE8\u610F\uFF1A</p><ul><li>\u6267\u884C async1, \u6253\u5370async1 start\uFF0C\u9047\u5230await\uFF0C</li><li>\u6267\u884C async2\uFF0C\u6253\u5370async2 start\uFF0C\u6267\u884Cnew promise p_a2p\uFF0C\u6253\u5370 async2 promise\uFF0C\u72B6\u6001\u4E3Afulled\uFF0Casync2\u7684next\uFF08async2_next2\uFF09\u5B58\u5165\u5FAE\u4EFB\u52A1\u961F\u5217</li><li>async2 \u72B6\u6001\u4E3Apendding\uFF0C\u8FD4\u56DEp_a2</li><li>async1 \u7684\u7B2C\u4E00\u4E2Anext\u4EA7\u751F\u7684promise \u5373\u4E3A p_a2\uFF0C\u72B6\u6001\u4E3Apendding\uFF0C\u5C06async1\u7684\u7B2C\u4E8C\u4E2Anext\u51FD\u6570\u6682\u5B58\u5185\u5B58resolveQueue\u4E2D</li><li>\u7EE7\u7EED\u6253\u5370 promise1,\u5C06 promise2 \u5B58\u5165\u5FAE\u4EFB\u52A1\u961F\u5217\uFF0C\u6B64\u65F6\u961F\u5217\u6709[async2_next2\uFF0Cpromise2]</li><li>\u7EE7\u7EED\u6253\u5370 script end</li><li>\u6267\u884C async2_next2\uFF0C\u5C06async2\u72B6\u6001\u6539\u4E3Afulled\uFF0C\u6267\u884CresolveQueue\u4EE3\u7801\uFF0C\u5C06async1_next2 \u5B58\u5165\u5FAE\u4EFB\u52A1\u961F\u5217,\u6B64\u65F6\u961F\u5217\u6709[promise2,async1_next2]</li><li>\u6267\u884C promise2\uFF0C \u6253\u5370 promise2\uFF0C\u5C06 promise3 \u5B58\u5165\u5FAE\u4EFB\u52A1\u961F\u5217\uFF0C\u6B64\u65F6\u961F\u5217\u6709[async1_next2\uFF0Cpromise3]</li><li>\u6267\u884C async1_next2,\u6539\u53D8 async1_promsie\u7684\u72B6\u6001\u4E3Afulled</li><li>\u6CE8\u610F\uFF1Aawait Promise.resolve() \u7C7B\u4F3C\u4E8E Promise.resolve(undefined).then((undefined) =&gt; {})</li><li>\u6240\u4EE5 async1 end \u5728 async1_promsie\u7684then\u91CC\uFF0C\u5B58\u5165\u5FAE\u4EFB\u52A1\u961F\u5217\uFF0C\u6B64\u65F6\u961F\u5217\u6709[promise3\uFF0Casync1 end]</li><li>\u6253\u5370 promise3</li><li>\u6253\u5370 async1 end</li></ul></li></ul></details>`,7);function b(y,f){const s=o("RouterLink");return c(),l("div",null,[n("nav",k,[n("ul",null,[n("li",null,[a(s,{to:"#async\u5E94\u7528"},{default:t(()=>[r]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#asyncpool"},{default:t(()=>[d]),_:1})]),n("li",null,[a(s,{to:"#async-promise-\u7EC8\u6781\u9898\u76EE"},{default:t(()=>[m]),_:1})])])])])]),v])}var w=e(u,[["render",b],["__file","p-a.js.html.vue"]]);export{w as default};
