import{_ as e,r as o,o as c,c as i,a as n,d as a,w as t,e as l,b as p}from"./app.68e824a5.js";const u={},r={class:"table-of-contents"},k=p("proxy"),d=p("reflect"),v=p("\u53D6\u6D88\u4EE3\u7406"),y=p("\u5E94\u7528\u573A\u666F"),b=l(`<h3 id="proxy" tabindex="-1"><a class="header-anchor" href="#proxy" aria-hidden="true">#</a> proxy</h3><ol><li>proxy \u52AB\u6301\u7684\u662F\u6574\u4E2A\u5BF9\u8C61\uFF0CProxy \u652F\u6301\u7684\u62E6\u622A\u64CD\u4F5C\u4E00\u89C8\uFF0C\u4E00\u5171 13 \u79CD\u3002</li></ol><ul><li>get(target, propKey, receiver)\uFF1A\u62E6\u622A\u5BF9\u8C61\u5C5E\u6027\u7684\u8BFB\u53D6\uFF0C\u6BD4\u5982 proxy.foo \u548C proxy[&#39;foo&#39;]\u3002</li><li>set(target, propKey, value, receiver)\uFF1A\u62E6\u622A\u5BF9\u8C61\u5C5E\u6027\u7684\u8BBE\u7F6E\uFF0C\u6BD4\u5982 proxy.foo = v \u6216 proxy[&#39;foo&#39;] = v\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</li><li>has(target, propKey)\uFF1A\u62E6\u622A propKey in proxy \u7684\u64CD\u4F5C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</li><li>deleteProperty(target, propKey)\uFF1A\u62E6\u622A delete proxy[propKey]\u7684\u64CD\u4F5C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</li><li>ownKeys(target)\uFF1A\u62E6\u622A Object.getOwnPropertyNames(proxy)\u3001Object.getOwnPropertySymbols(proxy)\u3001Object.keys(proxy)\u3001for...in \u5FAA\u73AF\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\u3002\u8BE5\u65B9\u6CD5\u8FD4\u56DE\u76EE\u6807\u5BF9\u8C61\u6240\u6709\u81EA\u8EAB\u7684\u5C5E\u6027\u7684\u5C5E\u6027\u540D\uFF0C\u800C Object.keys()\u7684\u8FD4\u56DE\u7ED3\u679C\u4EC5\u5305\u62EC\u76EE\u6807\u5BF9\u8C61\u81EA\u8EAB\u7684\u53EF\u904D\u5386\u5C5E\u6027\u3002</li><li>getOwnPropertyDescriptor(target, propKey)\uFF1A\u62E6\u622A Object.getOwnPropertyDescriptor(proxy, propKey)\uFF0C\u8FD4\u56DE\u5C5E\u6027\u7684\u63CF\u8FF0\u5BF9\u8C61\u3002</li><li>defineProperty(target, propKey, propDesc)\uFF1A\u62E6\u622A Object.defineProperty(proxy, propKey, propDesc\uFF09\u3001Object.defineProperties(proxy, propDescs)\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</li><li>preventExtensions(target)\uFF1A\u62E6\u622A Object.preventExtensions(proxy)\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</li><li>getPrototypeOf(target)\uFF1A\u62E6\u622A Object.getPrototypeOf(proxy)\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61\u3002</li><li>isExtensible(target)\uFF1A\u62E6\u622A Object.isExtensible(proxy)\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002</li><li>setPrototypeOf(target, proto)\uFF1A\u62E6\u622A Object.setPrototypeOf(proxy, proto)\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\u3002\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u662F\u51FD\u6570\uFF0C\u90A3\u4E48\u8FD8\u6709\u4E24\u79CD\u989D\u5916\u64CD\u4F5C\u53EF\u4EE5\u62E6\u622A\u3002</li><li>apply(target, object, args)\uFF1A\u62E6\u622A Proxy \u5B9E\u4F8B\u4F5C\u4E3A\u51FD\u6570\u8C03\u7528\u7684\u64CD\u4F5C\uFF0C\u6BD4\u5982 proxy(...args)\u3001proxy.call(object, ...args)\u3001proxy.apply(...)\u3002</li><li>construct(target, args)\uFF1A\u62E6\u622A Proxy \u5B9E\u4F8B\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u8C03\u7528\u7684\u64CD\u4F5C\uFF0C\u6BD4\u5982 new proxy(...args)\u3002</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">getting </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>propKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">setting </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>propKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">!</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="reflect" tabindex="-1"><a class="header-anchor" href="#reflect" aria-hidden="true">#</a> reflect</h3><ol><li>\u5C06 Object \u5BF9\u8C61\u7684\u4E00\u4E9B\u660E\u663E\u5C5E\u4E8E\u8BED\u8A00\u5185\u90E8\u7684\u65B9\u6CD5\uFF08\u6BD4\u5982 Object.defineProperty\uFF09\uFF0C\u653E\u5230 Reflect \u5BF9\u8C61\u4E0A\u3002</li><li>\u914D\u5408 proxy\uFF0C\u64CD\u4F5C\u5B8C\u62E6\u622A\u4EE3\u7801\u540E\uFF0C\u7EE7\u7EED\u7528 reflect \u6765\u64CD\u4F5C\u539F\u56E0\u7684\u64CD\u4F5C</li></ol><h3 id="\u53D6\u6D88\u4EE3\u7406" tabindex="-1"><a class="header-anchor" href="#\u53D6\u6D88\u4EE3\u7406" aria-hidden="true">#</a> \u53D6\u6D88\u4EE3\u7406</h3><p>Proxy.revocable(target, handler);</p><h3 id="\u5E94\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a> \u5E94\u7528\u573A\u666F</h3><p>Proxy\u5176\u529F\u80FD\u975E\u5E38\u7C7B\u4F3C\u4E8E\u8BBE\u8BA1\u6A21\u5F0F\u4E2D\u7684\u4EE3\u7406\u6A21\u5F0F\uFF0C\u5E38\u7528\u529F\u80FD\u5982\u4E0B\uFF1A</p><ul><li>\u62E6\u622A\u548C\u76D1\u89C6\u5916\u90E8\u5BF9\u5BF9\u8C61\u7684\u8BBF\u95EE</li><li>\u964D\u4F4E\u51FD\u6570\u6216\u7C7B\u7684\u590D\u6742\u5EA6</li><li>\u5728\u590D\u6742\u64CD\u4F5C\u524D\u5BF9\u64CD\u4F5C\u8FDB\u884C\u6821\u9A8C\u6216\u5BF9\u6240\u9700\u8D44\u6E90\u8FDB\u884C\u7BA1\u7406</li></ul><ol><li>\u4F7F\u7528 Proxy \u4FDD\u969C\u6570\u636E\u7C7B\u578B\u7684\u51C6\u786E\u6027</li></ol><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> numericDataStore <span class="token operator">=</span> <span class="token punctuation">{</span> count<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> amount<span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span> total<span class="token operator">:</span> <span class="token number">14</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
numericDataStore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>numericDataStore<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">!==</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;\u5C5E\u6027\u53EA\u80FD\u662Fnumber\u7C7B\u578B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

numericDataStore<span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token string">&quot;foo&quot;</span>
<span class="token comment">// Error: \u5C5E\u6027\u53EA\u80FD\u662Fnumber\u7C7B\u578B</span>

numericDataStore<span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">333</span>
<span class="token comment">// \u8D4B\u503C\u6210\u529F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u58F0\u660E\u4E86\u4E00\u4E2A\u79C1\u6709\u7684 apiKey\uFF0C\u4FBF\u4E8E api \u8FD9\u4E2A\u5BF9\u8C61\u5185\u90E8\u7684\u65B9\u6CD5\u8C03\u7528\uFF0C\u4F46\u4E0D\u5E0C\u671B\u4ECE\u5916\u90E8\u4E5F\u80FD\u591F\u8BBF\u95EE api._apiKey</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">let</span> api <span class="token operator">=</span> <span class="token punctuation">{</span>
    _apiKey<span class="token operator">:</span> <span class="token string">&#39;123abc456def&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">getUsers</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">getUser</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">setUser</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span> config<span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token constant">RESTRICTED</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;_apiKey&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
api <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>api<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">RESTRICTED</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \u4E0D\u53EF\u8BBF\u95EE.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token constant">RESTRICTED</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \u4E0D\u53EF\u4FEE\u6539</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>_apiKey<span class="token punctuation">)</span>
api<span class="token punctuation">.</span>_apiKey <span class="token operator">=</span> <span class="token string">&#39;987654321&#39;</span>
<span class="token comment">// \u4E0A\u8FF0\u90FD\u629B\u51FA\u9519\u8BEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD8\u80FD\u901A\u8FC7\u4F7F\u7528Proxy\u5B9E\u73B0\u89C2\u5BDF\u8005\u6A21\u5F0F</p><p>\u89C2\u5BDF\u8005\u6A21\u5F0F\uFF08Observer mode\uFF09\u6307\u7684\u662F\u51FD\u6570\u81EA\u52A8\u89C2\u5BDF\u6570\u636E\u5BF9\u8C61\uFF0C\u4E00\u65E6\u5BF9\u8C61\u6709\u53D8\u5316\uFF0C\u51FD\u6570\u5C31\u4F1A\u81EA\u52A8\u6267\u884C</p><p>observable\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u539F\u59CB\u5BF9\u8C61\u7684 Proxy \u4EE3\u7406\uFF0C\u62E6\u622A\u8D4B\u503C\u64CD\u4F5C\uFF0C\u89E6\u53D1\u5145\u5F53\u89C2\u5BDF\u8005\u7684\u5404\u4E2A\u51FD\u6570</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> queuedObservers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">observe</span> <span class="token operator">=</span> fn <span class="token operator">=&gt;</span> queuedObservers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">observable</span> <span class="token operator">=</span> obj <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>set<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
  queuedObservers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>observer <span class="token operator">=&gt;</span> <span class="token function">observer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89C2\u5BDF\u8005\u51FD\u6570\u90FD\u653E\u8FDBSet\u96C6\u5408\uFF0C\u5F53\u4FEE\u6539obj\u7684\u503C\uFF0C\u5728\u4F1Aset\u51FD\u6570\u4E2D\u62E6\u622A\uFF0C\u81EA\u52A8\u6267\u884CSet\u6240\u6709\u7684\u89C2\u5BDF\u8005</p>`,20);function m(f,g){const s=o("RouterLink");return c(),i("div",null,[n("nav",r,[n("ul",null,[n("li",null,[a(s,{to:"#proxy"},{default:t(()=>[k]),_:1})]),n("li",null,[a(s,{to:"#reflect"},{default:t(()=>[d]),_:1})]),n("li",null,[a(s,{to:"#\u53D6\u6D88\u4EE3\u7406"},{default:t(()=>[v]),_:1})]),n("li",null,[a(s,{to:"#\u5E94\u7528\u573A\u666F"},{default:t(()=>[y]),_:1})])])]),b])}var w=e(u,[["render",m],["__file","proxy-reflect.html.vue"]]);export{w as default};
