import{_ as n,o as s,c as a,g as p}from"./app.42a0e3cd.js";const t={},o=p(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">//\u6D45\u62F7\u8D1D</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> arr2 <span class="token operator">=</span> arr<span class="token punctuation">;</span>

<span class="token comment">//\u6DF1\u62F7\u8D1D(\u7F3A\u9677\u7248)</span>
  <span class="token comment">//\u6570\u7EC4\u7684\u62F7\u8D1D</span>
    <span class="token comment">// for \u5FAA\u73AF copy</span>
    <span class="token keyword">function</span> <span class="token function">copy</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> cArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        cArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> cArr<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> arr4 <span class="token operator">=</span> <span class="token function">copy</span><span class="token punctuation">(</span>arr3<span class="token punctuation">)</span> <span class="token comment">//[1,2,3,4]</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr4<span class="token punctuation">)</span> <span class="token comment">//[1,2,3,4]</span>
    arr3<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr3<span class="token punctuation">)</span> <span class="token comment">//[5,2,3,4]</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr4<span class="token punctuation">)</span> <span class="token comment">//[1,2,3,4]</span>

    <span class="token comment">//slice\u5B9E\u73B0\u6DF1\u62F7\u8D1D</span>
    <span class="token keyword">let</span> arr5 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> arr6 <span class="token operator">=</span> arr5<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    arr5<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[5,2,3,4]</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr6<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[1,2,3,4]</span>
  
    <span class="token comment">//concat\u5B9E\u73B0\u6DF1\u62F7\u8D1D</span>
    <span class="token keyword">let</span> arr7 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> arr8 <span class="token operator">=</span> arr7<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    arr7<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr7<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[5,2,3,4]</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr8<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//[1,2,3,4]</span>

    <span class="token comment">//es6 \u6269\u5C55\u8FD0\u7B97\u5B9E\u73B0\u6DF1\u62F7\u8D1D</span>
    <span class="token keyword">let</span> arr9 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr10<span class="token punctuation">]</span> <span class="token operator">=</span> arr9<span class="token punctuation">;</span>
    arr9<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr9<span class="token punctuation">)</span> <span class="token comment">//[5,2,3,4]</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr10<span class="token punctuation">)</span> <span class="token comment">//[1,2,3,4]</span>

    <span class="token comment">//JSON.parse(JSON.stringify(arr)) \u4E0D\u8003\u8651 undefined \u3001 null\u3001 function\u3001 symbol</span>
    <span class="token keyword">let</span> arr9 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> arr10 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>arr9<span class="token punctuation">)</span><span class="token punctuation">)</span>
    arr9<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr9<span class="token punctuation">)</span> <span class="token comment">//[5,2,3,4]</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr10<span class="token punctuation">)</span> <span class="token comment">//[1,2,3,4]</span>
    <span class="token comment">//\u6CE8\u610F\uFF1A\u8BE5\u65B9\u6CD5\u5728\u6570\u636E\u91CF\u6BD4\u8F83\u5927\u65F6\uFF0C\u4F1A\u6709\u6027\u80FD\u95EE\u9898\u3002</span>
    
  <span class="token comment">//\u5BF9\u8C61\u7684\u62F7\u8D1D</span>
    <span class="token comment">//  \u5FAA\u73AF copy \u5BF9\u8C61</span>
    <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
      id<span class="token operator">:</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span><span class="token string">&#39;king&#39;</span><span class="token punctuation">,</span>
      sex<span class="token operator">:</span><span class="token string">&#39;man&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> obj2 <span class="token operator">=</span> <span class="token function">copy2</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
    <span class="token keyword">function</span> <span class="token function">copy2</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> cObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span><span class="token punctuation">{</span>
        cObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> cObj
    <span class="token punctuation">}</span>
    obj2<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;king2&quot;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// {id: &quot;0&quot;, name: &quot;king&quot;, sex: &quot;man&quot;}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span> <span class="token comment">// {id: &quot;0&quot;, name: &quot;king2&quot;, sex: &quot;man&quot;}</span>

    <span class="token comment">//JSON.parse \u4E0E JSON.stringify</span>
    <span class="token comment">// \u6784\u9020\u51FD\u6570</span>
    <span class="token keyword">function</span> <span class="token function">person</span><span class="token punctuation">(</span>pname<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> pname<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> Messi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">person</span><span class="token punctuation">(</span><span class="token string">&#39;Messi&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
      x<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> 
      y<span class="token operator">:</span> <span class="token punctuation">{</span>
          m<span class="token operator">:</span> <span class="token number">1</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      a<span class="token operator">:</span><span class="token keyword">undefined</span><span class="token punctuation">,</span>
      <span class="token function-variable function">b</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> a<span class="token operator">+</span>b
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      c<span class="token operator">:</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      d<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Array</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      e<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;ab+c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;i&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      f<span class="token operator">:</span> Messi
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span> <span class="token comment">//{x: 1, y: {m: 1}, a: undefined, b: \u0192, c: Symbol(foo)}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span> <span class="token comment">//{x: 1, y: {m: 1}}</span>
    obj2<span class="token punctuation">.</span>y<span class="token punctuation">.</span>m <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">//\u4FEE\u6539obj2.y.m</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span> <span class="token comment">//{x: 1, y: {m: 1}, a: undefined, b: \u0192, c: Symbol(foo)}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span> <span class="token comment">//{x: 2, y: {m: 2}}</span>
    <span class="token comment">//\u53EF\u5B9E\u73B0\u591A\u7EF4\u5BF9\u8C61\u7684\u6DF1\u62F7\u8D1D\u3002</span>
    <span class="token comment">//\u6CE8\u610F\uFF1A\u8FDB\u884CJSON.stringify() \u5E8F\u5217\u5316\u7684\u8FC7\u7A0B\u4E2D\uFF0Cundefined\u3001\u4EFB\u610F\u7684\u51FD\u6570\u4EE5\u53CA symbol \u503C\uFF0C\u5728\u5E8F\u5217\u5316\u8FC7\u7A0B\u4E2D\u4F1A\u88AB\u5FFD\u7565\uFF08\u51FA\u73B0\u5728\u975E\u6570\u7EC4\u5BF9\u8C61\u7684\u5C5E\u6027\u503C\u4E2D\u65F6\uFF09\u6216\u8005\u88AB\u8F6C\u6362\u6210 null\uFF08\u51FA\u73B0\u5728\u6570\u7EC4\u4E2D\u65F6\uFF09\u3002</span>
      <span class="token comment">// \u65E0\u6CD5\u590D\u5236\u51FD\u6570</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">.</span>b<span class="token punctuation">,</span> obj1<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined [Function: say]</span>
      <span class="token comment">// \u7A00\u758F\u6570\u7EC4\u590D\u5236\u9519\u8BEF</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">.</span>d<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> obj1<span class="token punctuation">.</span>d<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// null undefined</span>
      <span class="token comment">// \u65E0\u6CD5\u590D\u5236\u6B63\u5219\u5BF9\u8C61</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">.</span>e<span class="token punctuation">,</span> obj1<span class="token punctuation">.</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// {} /ab+c/i</span>
      <span class="token comment">// \u6784\u9020\u51FD\u6570\u6307\u5411\u9519\u8BEF</span>
      <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">.</span>f<span class="token punctuation">.</span>constructor<span class="token punctuation">,</span> obj1<span class="token punctuation">.</span>f<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [Function: Object] [Function: person]</span>

    <span class="token comment">//es6 \u6269\u5C55\u8FD0\u7B97</span>
    <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
      id<span class="token operator">:</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span>
      name<span class="token operator">:</span><span class="token string">&#39;king&#39;</span><span class="token punctuation">,</span>
      sex<span class="token operator">:</span><span class="token string">&#39;man&#39;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span><span class="token operator">...</span>obj4<span class="token punctuation">}</span> <span class="token operator">=</span> obj
    obj4<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;king4&quot;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">//{id: &quot;0&quot;, name: &quot;king&quot;, sex: &quot;man&quot;}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj4<span class="token punctuation">)</span> <span class="token comment">//{id: &quot;0&quot;, name: &quot;king4&quot;, sex: &quot;man&quot;}</span>

    <span class="token comment">//Object.assign() \u53EA\u80FD\u5B9E\u73B0\u4E00\u7EF4\u5BF9\u8C61\u7684\u6DF1\u62F7\u8D1D\u3002</span>
    <span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>x<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> y<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span> <span class="token comment">// {x: 1, y: 2}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span> <span class="token comment">// {x: 1, y: 2}</span>
    obj2<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// \u4FEE\u6539 obj2.x</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span> <span class="token comment">// {x: 1, y: 2}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span> <span class="token comment">// {x: 2, y: 2}</span>
    <span class="token keyword">var</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
        x<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> 
        y<span class="token operator">:</span> <span class="token punctuation">{</span>
            m<span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> obj2 <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span> <span class="token comment">// {x: 1, y: {m: 1}}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span> <span class="token comment">// {x: 1, y: {m: 1}}</span>

    obj2<span class="token punctuation">.</span>y<span class="token punctuation">.</span>m <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// \u4FEE\u6539 obj2.y.m</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span> <span class="token comment">// {x: 1, y: {m: 2}}</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span> <span class="token comment">// {x: 1, y: {m: 2}}</span>

<span class="token comment">//\u901A\u7528\u7248</span>
  <span class="token keyword">let</span> <span class="token function-variable function">clone</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> o <span class="token operator">=</span> v<span class="token punctuation">.</span>constructor <span class="token operator">===</span> <span class="token builtin">Array</span> <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token keyword">in</span> v<span class="token punctuation">)</span><span class="token punctuation">{</span>
      o<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">typeof</span> v<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">?</span> <span class="token function">clone</span><span class="token punctuation">(</span>v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> v<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> o<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u6D4B\u8BD5</span>
  <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span><span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span><span class="token string">&#39;king&#39;</span><span class="token punctuation">,</span>
    sex<span class="token operator">:</span><span class="token string">&#39;man&#39;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> obj2 <span class="token operator">=</span> <span class="token function">clone</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
  obj2<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;king2&quot;</span>
  <span class="token comment">//\u4F46\u4E0A\u9762\u7684\u6DF1\u62F7\u8D1D\u65B9\u6CD5\u9047\u5230\u5FAA\u73AF\u5F15\u7528\uFF0C\u4F1A\u9677\u5165\u4E00\u4E2A\u5FAA\u73AF\u7684\u9012\u5F52\u8FC7\u7A0B\uFF0C\u4ECE\u800C\u5BFC\u81F4\u7206\u6808\uFF0C\u6240\u4EE5\u8981\u907F\u514D\u3002</span>
  <span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span>
    x<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> 
    y<span class="token operator">:</span> <span class="token number">2</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  obj1<span class="token punctuation">.</span>z <span class="token operator">=</span> obj1<span class="token punctuation">;</span>
  <span class="token keyword">let</span> obj2 <span class="token operator">=</span> <span class="token function">clone</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj2<span class="token punctuation">)</span> 
  <span class="token comment">//\u7ED3\u679C\u5982\u4E0B\uFF1AMaximum call stack size exceeded</span>

<span class="token comment">// \u7C7B\u578B\u5224\u65AD</span>
<span class="token comment">// function isType_curry(type) {</span>
<span class="token comment">//   return function(obj) {</span>
<span class="token comment">//     return Object.prototype.toString.call(obj) === \`[object \${type}]\`</span>
<span class="token comment">//   }</span>
<span class="token comment">// }</span>
<span class="token comment">// let isArray = isType_curry(&#39;Array&#39;)</span>
<span class="token comment">// let isNumber = isType_curry(&#39;Number&#39;)</span>

<span class="token comment">//\u7EC8\u7ED3\u5B8C\u7F8E\u7248</span>
<span class="token keyword">function</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5904\u7406\u5FAA\u73AF\u5F15\u7528\u95EE\u9898\uFF0Cparents\u4E0Echildren\u4E0B\u6807\u4E00\u4E00\u5BF9\u5E94</span>
  <span class="token keyword">let</span> oldObjs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> newObjs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">function</span> <span class="token function">isType</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u5224\u65ADobj\u662F\u5426\u4E3Atype\u7C7B\u578B</span>
    <span class="token comment">// if (typeof obj !== &#39;object&#39;) return false</span>
    <span class="token comment">// const typeString = Object.prototype.toString.call(obj)</span>
    <span class="token comment">// let flag</span>
    <span class="token comment">// switch (type) {</span>
    <span class="token comment">//   case &#39;Array&#39;:</span>
    <span class="token comment">//     flag = typeString === &#39;[object Array]&#39; </span>
    <span class="token comment">//     break;</span>
    <span class="token comment">//   case &#39;Date&#39;:</span>
    <span class="token comment">//     flag = typeString === &#39;[object Date]&#39; </span>
    <span class="token comment">//     break;</span>
    <span class="token comment">//   case &#39;RegExp&#39;:</span>
    <span class="token comment">//     flag = typeString === &#39;[object RegExp]&#39; </span>
    <span class="token comment">//     break;</span>
    <span class="token comment">//   default:</span>
    <span class="token comment">//     flag = false</span>
    <span class="token comment">//     break;</span>
    <span class="token comment">// }</span>
    <span class="token comment">// return flag</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[object </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">type</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">getRegExp</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u83B7\u53D6\u6B63\u5219\u7684flags</span>
    <span class="token keyword">let</span> flags <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>exp<span class="token punctuation">.</span>global<span class="token punctuation">)</span> flags <span class="token operator">+=</span> <span class="token string">&#39;g&#39;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>exp<span class="token punctuation">.</span>ignoreCase<span class="token punctuation">)</span> flags <span class="token operator">+=</span> <span class="token string">&#39;i&#39;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>exp<span class="token punctuation">.</span>multiline<span class="token punctuation">)</span> flags <span class="token operator">+=</span> <span class="token string">&#39;m&#39;</span>
    <span class="token keyword">return</span> flags
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">_clone</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldObj <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> oldObj <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> oldObj
    <span class="token keyword">let</span> newObj <span class="token punctuation">,</span> proto
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">,</span><span class="token string">&#39;Array&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u5904\u7406 Array</span>
      newObj <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">,</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u5904\u7406 Date</span>
      newObj <span class="token operator">=</span> <span class="token function">newDate</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">,</span><span class="token string">&#39;RegExp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u5904\u7406 RegExp</span>
      newObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">.</span>source<span class="token punctuation">,</span><span class="token function">getRegExp</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>oldObj<span class="token punctuation">.</span>lastIndex<span class="token punctuation">)</span> newObj<span class="token punctuation">.</span>lastIndex <span class="token operator">=</span> oldObj<span class="token punctuation">.</span>lastIndex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">//\u5904\u7406 Object \u6216 Function</span>
      proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span>
      newObj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u5904\u7406\u5FAA\u73AF\u5F15\u7528\u95EE\u9898\uFF0C\u4E4B\u524D\u6709\u5904\u7406\u8FC7\uFF0C\u76F4\u63A5\u8FD4\u56DE\u7ED3\u679C</span>
    <span class="token keyword">const</span> pIndex <span class="token operator">=</span> oldObjs<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pIndex <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> newObjs<span class="token punctuation">[</span>pIndex<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    oldObjs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span>
    newObjs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newObj<span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> i <span class="token keyword">in</span> oldObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        newObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">_clone</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> newObj
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">_clone</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u89E3\u51B3\u95EE\u9898:
 *  1.\u5BF9\u8C61\u7684\u6784\u9020\u51FD\u6570\u6307\u5411\u9519\u8BEF\u95EE\u9898
 *  2.\u6B63\u5219\u5BF9\u8C61\u65E0\u6CD5\u590D\u5236\u95EE\u9898
 *  3.\u51FD\u6570\u65E0\u6CD5\u590D\u5236\u95EE\u9898(JSON.parse \u4E0E JSON.stringify)
 *  4.\u5FAA\u73AF\u5F15\u7528\u7206\u6808\u95EE\u9898
 *  \u53C2\u8003\u6587\u7AE0\uFF1Ahttps://juejin.cn/post/6844903584023183368#heading-1
*/</span>
  test <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  <span class="token keyword">function</span> <span class="token function">person</span><span class="token punctuation">(</span>pname<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> pname<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> Messi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">person</span><span class="token punctuation">(</span><span class="token string">&#39;Messi&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> oldObj <span class="token operator">=</span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> say<span class="token punctuation">,</span>
    c<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;ab+c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;i&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    d<span class="token operator">:</span> Messi<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  oldObj<span class="token punctuation">.</span>b <span class="token operator">=</span> oldObj<span class="token punctuation">;</span>
  <span class="token keyword">const</span> newObj <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">.</span>a<span class="token punctuation">,</span> oldObj<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [Function: say] [Function: say]</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">.</span>b<span class="token punctuation">,</span> oldObj<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { a: [Function: say], c: /ab+c/i, d: person { name: &#39;Messi&#39; }, b: [Circular] } { a: [Function: say], c: /ab+c/i, d: person { name: &#39;Messi&#39; }, b: [Circular] }</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">.</span>c<span class="token punctuation">,</span> oldObj<span class="token punctuation">.</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// /ab+c/i /ab+c/i</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">.</span>d<span class="token punctuation">.</span>constructor<span class="token punctuation">,</span> oldObj<span class="token punctuation">.</span>d<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [Function: person] [Function: person]</span>

  <span class="token comment">// \u7D2F\u52A0\u5668</span>
  <span class="token comment">// add(1) // 1</span>
  <span class="token comment">// add(1)(2)  // 3</span>
  <span class="token comment">// add(1)(2)(3) // 6</span>
  <span class="token comment">// add(1)(2)(3)(4) // 10 </span>
  <span class="token comment">// add(1)(2,5)(3)(4) // 10 </span>

  <span class="token comment">// function add(a) {</span>
  <span class="token comment">//   function s(b) {</span>
  <span class="token comment">//       a = a + b</span>
  <span class="token comment">//   return s</span>
  <span class="token comment">//   }</span>
  <span class="token comment">//   s.toString = function() {</span>
  <span class="token comment">//       return a</span>
  <span class="token comment">//   }</span>
  <span class="token comment">//   return s</span>
  <span class="token comment">// }</span>
  <span class="token comment">// console.log(add(1)(2)(3)(4)) // f 10</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),e=[o];function c(l,i){return s(),a("div",null,e)}var k=n(t,[["render",c],["__file","deepClone.js.html.vue"]]);export{k as default};
