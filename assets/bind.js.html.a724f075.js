import{_ as n,o as s,c as a,e as t}from"./app.6cfd3ac5.js";const p={},e=t(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * Call
 * \u53C2\u6570\uFF1A\u591A\u4E2A\u53C2\u6570---\u4F7F\u7528\u4E00\u4E2A\u6307\u5B9A\u7684 this \u503C\u548C\u4E00\u4E2A\u6216\u591A\u4E2A\u53C2\u6570\u6765\u8C03\u7528\u4E00\u4E2A\u51FD\u6570\u3002
 * \u8981\u70B9\uFF1A
 *    this \u53EF\u80FD\u4F20\u5165 null\uFF1B
 *    \u4F20\u5165\u4E0D\u56FA\u5B9A\u4E2A\u6570\u7684\u53C2\u6570\uFF1B
 *    \u51FD\u6570\u53EF\u80FD\u6709\u8FD4\u56DE\u503C\uFF1B
*/</span>
<span class="token comment">// es5</span>
<span class="token builtin">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myCall</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4E3Anull\u6216undefined\u5219\u6307\u5411window</span>
  <span class="token comment">// \u5176\u5B83\u539F\u59CB\u503C\u4F1A\u8F6C\u6362\u6210\u5B83\u7684\u5BF9\u8C61\u5F62\u5F0F(\u5982 &#39;5&#39; =&gt; new String(&#39;5&#39;), true =&gt; new Boolean(true)\u7B49),\u8FD9\u5C31\u662F\u201C\u88C5\u7BB1\u201D\u3002</span>
  <span class="token keyword">var</span> context <span class="token operator">=</span> context <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> context <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">?</span> window <span class="token operator">:</span> <span class="token function">Object</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
  <span class="token comment">// \u8003\u8651context \u662F\u5426\u5B58\u5728fn \u5C5E\u6027</span>
  <span class="token keyword">var</span> key <span class="token operator">=</span> <span class="token function">createUniqueKey</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
  context<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span>

  <span class="token keyword">let</span> len <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">,</span> result
  <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> context<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;arguments[&#39;</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6700\u7EC8\u6267\u884C obj.fn(arg1,arg2,arg3....)</span>
    result <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;context[key](&#39;</span><span class="token operator">+</span>args<span class="token operator">+</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">delete</span> context<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
<span class="token comment">// es6 </span>
<span class="token builtin">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myCall</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4E3Anull\u6216undefined\u5219\u6307\u5411window</span>
  <span class="token comment">// \u5176\u5B83\u539F\u59CB\u503C\u4F1A\u8F6C\u6362\u6210\u5B83\u7684\u5BF9\u8C61\u5F62\u5F0F(\u5982 &#39;5&#39; =&gt; new String(&#39;5&#39;), true =&gt; new Boolean(true)\u7B49),\u8FD9\u5C31\u662F\u201C\u88C5\u7BB1\u201D\u3002</span>
  <span class="token keyword">var</span> context <span class="token operator">=</span> context <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> context <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">?</span> window <span class="token operator">:</span> <span class="token function">Object</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
  <span class="token comment">// \u8003\u8651context \u662F\u5426\u5B58\u5728fn \u5C5E\u6027</span>
  <span class="token keyword">var</span> key <span class="token operator">=</span> <span class="token function">createUniqueKey</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token comment">// \u8FD4\u56DE Symbol(&#39;fn&#39;)</span>
  context<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span>
  <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
  <span class="token comment">// \u6700\u7EC8\u6267\u884C obj.fn(arg1,arg2,arg3....)</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> context<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token keyword">delete</span> context<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>


<span class="token doc-comment comment">/**
 * Apply
 * \u53C2\u6570\uFF1A call \u662F\u4F20\u5165\u4E0D\u56FA\u5B9A\u4E2A\u6570\u7684\u53C2\u6570\uFF0C\u800C apply \u662F\u4F20\u5165\u4E00\u4E2A\u6570\u7EC4
 * \u8981\u70B9\uFF1Athis \u53EF\u80FD\u4F20\u5165 null\uFF1B
        \u4F20\u5165\u4E00\u4E2A\u6570\u7EC4\uFF1B
        \u51FD\u6570\u53EF\u80FD\u6709\u8FD4\u56DE\u503C\uFF1B
*/</span>
<span class="token builtin">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myApply</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4E3Anull\u6216undefined\u5219\u6307\u5411window</span>
  <span class="token comment">// \u5176\u5B83\u539F\u59CB\u503C\u4F1A\u8F6C\u6362\u6210\u5B83\u7684\u5BF9\u8C61\u5F62\u5F0F(\u5982 &#39;5&#39; =&gt; new String(&#39;5&#39;), true =&gt; new Boolean(true)\u7B49),\u8FD9\u5C31\u662F\u201C\u88C5\u7BB1\u201D\u3002</span>
  <span class="token keyword">var</span> context <span class="token operator">=</span> context <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> context <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">?</span> window <span class="token operator">:</span> <span class="token function">Object</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
  <span class="token comment">// \u8003\u8651context \u662F\u5426\u5B58\u5728fn \u5C5E\u6027</span>
  <span class="token keyword">var</span> key <span class="token operator">=</span> <span class="token function">createUniqueKey</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
  context<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span>

  <span class="token keyword">let</span> len <span class="token operator">=</span> arguments<span class="token punctuation">.</span>length<span class="token punctuation">,</span> result
  <span class="token keyword">if</span> <span class="token punctuation">(</span>len <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result <span class="token operator">=</span> context<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      args<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;arr[&#39;</span><span class="token operator">+</span>i<span class="token operator">+</span><span class="token string">&#39;]&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token function">eval</span><span class="token punctuation">(</span><span class="token string">&#39;context[key](&#39;</span><span class="token operator">+</span>args<span class="token operator">+</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">delete</span> context<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
<span class="token comment">// es6 </span>
<span class="token builtin">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myApply</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u4E3Anull\u6216undefined\u5219\u6307\u5411window</span>
  <span class="token comment">// \u5176\u5B83\u539F\u59CB\u503C\u4F1A\u8F6C\u6362\u6210\u5B83\u7684\u5BF9\u8C61\u5F62\u5F0F(\u5982 &#39;5&#39; =&gt; new String(&#39;5&#39;), true =&gt; new Boolean(true)\u7B49),\u8FD9\u5C31\u662F\u201C\u88C5\u7BB1\u201D\u3002</span>
  <span class="token keyword">var</span> context <span class="token operator">=</span> context <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> context <span class="token operator">===</span> <span class="token string">&#39;undefined&#39;</span> <span class="token operator">?</span> window <span class="token operator">:</span> <span class="token function">Object</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span>
  <span class="token comment">// \u8003\u8651context \u662F\u5426\u5B58\u5728fn \u5C5E\u6027</span>
  <span class="token keyword">var</span> key <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;fn&#39;</span><span class="token punctuation">)</span>
  context<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span>
  <span class="token comment">// \u6700\u7EC8\u6267\u884C obj.fn(arg1,arg2,arg3....)</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span>  arr <span class="token operator">?</span> context<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span> <span class="token operator">:</span> context<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">delete</span> context<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * Bind
 * \u53C2\u6570\uFF1A\u591A\u4E2A\u53C2\u6570---\u8FD9\u4E2A\u65B0\u51FD\u6570\u7684 this \u88AB\u6307\u5B9A\u4E3A bind() \u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u800C\u5176\u4F59\u53C2\u6570\u5C06\u4F5C\u4E3A\u65B0\u51FD\u6570\u7684\u53C2\u6570\uFF0C\u4F9B\u8C03\u7528\u65F6\u4F7F\u7528
 * \u8981\u70B9\uFF1A
 *    bind() \u9664\u4E86 this \u5916\uFF0C\u8FD8\u53EF\u4F20\u5165\u591A\u4E2A\u53C2\u6570\uFF1B
        bind \u521B\u5EFA\u7684\u65B0\u51FD\u6570\u53EF\u80FD\u4F20\u5165\u591A\u4E2A\u53C2\u6570\uFF1B
        \u65B0\u51FD\u6570\u53EF\u80FD\u88AB\u5F53\u505A\u6784\u9020\u51FD\u6570\u8C03\u7528\uFF1B
        \u51FD\u6570\u53EF\u80FD\u6709\u8FD4\u56DE\u503C\uFF1B
 * \u7528\u6CD5\uFF1A
 *    1. \u521B\u5EFA\u7ED1\u5B9A\u51FD\u6570\uFF0C\u5373\u7ED1\u5B9A\u5BF9\u8C61
 *    2. \u504F\u51FD\u6570\uFF0C\u4F7F\u4E00\u4E2A\u51FD\u6570\u62E5\u6709\u9884\u8BBE\u7684\u521D\u59CB\u53C2\u6570
 *    3. \u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u4F7F\u7528\u7684\u7ED1\u5B9A\u51FD\u6570
 * \u529F\u80FD\uFF1A
 *    1. \u8FD4\u56DE\u4E00\u4E2A\u51FD\u6570\uFF0C\u51FD\u6570\u6267\u884C\u65F6\u6267\u884C\u7684\u662F\u88AB\u7ED1\u5B9A\u7684\u51FD\u6570\uFF0C\u5176this\u6307\u5411\u7ED1\u5B9A\u7684\u5BF9\u8C61\uFF0C\u5982\u679C\u662F\u6784\u9020\u51FD\u6570this\u6307\u5411
 *    2. \u53EF\u4EE5\u9884\u7559\u53C2\u6570
 *    3. \u53EF\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u4F7F\u7528\u5E76\u7EE7\u627F\u539F\u51FD\u6570
*/</span>
<span class="token builtin">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myBind</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">,</span>args <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">// \u83B7\u53D6\u7B2C\u4E8C\u4E2A\u53C2\u6570\u5230\u6700\u540E\u4E00\u4E2A\u53C2\u6570\uFF0C\u5373\u9884\u8BBE\u53C2\u6570</span>
  <span class="token comment">// \u8FD4\u56DE\u7684\u51FD\u6570</span>
  <span class="token keyword">var</span> <span class="token function-variable function">fBound</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u83B7\u53D6\u7684\u662Fbind\u8FD4\u56DE\u7684\u51FD\u6570\u4F20\u5165\u7684\u53C2\u6570</span>
    <span class="token keyword">var</span> bindArgs <span class="token operator">=</span> <span class="token builtin">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>
    <span class="token comment">// \u6309\u7167\u987A\u5E8F\u62FC\u63A5\u8D77\u6765</span>
    <span class="token keyword">var</span> finalArgs <span class="token operator">=</span> args<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>bindArgs<span class="token punctuation">)</span>
    <span class="token comment">// \u5F53\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u65F6\uFF0Cthis \u6307\u5411\u5B9E\u4F8B(new\u7684\u7A7A\u5BF9\u8C61)\uFF0C\u6B64\u65F6\u7ED3\u679C\u4E3A true\uFF0C\u5C06\u7ED1\u5B9A\u51FD\u6570\u7684 this \u6307\u5411\u8BE5\u5B9E\u4F8B\uFF0C\u53EF\u4EE5\u8BA9\u5B9E\u4F8B\u83B7\u5F97\u6765\u81EA\u7ED1\u5B9A\u51FD\u6570\u7684\u503C</span>
    <span class="token keyword">return</span> <span class="token function">self</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">fBound</span> <span class="token operator">?</span> <span class="token keyword">this</span> <span class="token operator">:</span> context <span class="token punctuation">,</span> finalArgs<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u4F5C\u4E3A\u4E2D\u8F6C</span>
  <span class="token keyword">var</span> <span class="token function-variable function">fNOP</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// \u4FEE\u6539\u8FD4\u56DE\u51FD\u6570\u7684 prototype \u4E3A\u7ED1\u5B9A\u51FD\u6570\u7684 prototype\uFF0C\u5B9E\u4F8B\u5C31\u53EF\u4EE5\u7EE7\u627F\u7ED1\u5B9A\u51FD\u6570\u7684\u539F\u578B\u4E2D\u7684\u503C</span>
  <span class="token comment">// fBound.prototype = this.prototype;</span>
  <span class="token comment">// \u4F18\u5316 \uFF1A\u4FEE\u6539 fBound.prototype \u7684\u65F6\u5019\uFF0C\u4E5F\u4F1A\u76F4\u63A5\u4FEE\u6539\u7ED1\u5B9A\u51FD\u6570\u7684 prototype\u3002\u8FD9\u4E2A\u65F6\u5019\uFF0C\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7\u4E00\u4E2A\u7A7A\u51FD\u6570\u6765\u8FDB\u884C\u4E2D\u8F6C</span>
  fNOP<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>prototype
  fBound<span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">fNOP</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD4\u56DE\u7684\u51FD\u6570\u7EE7\u627F\uFF0C\u539F\u578B\u94FE\u7EE7\u627Fself\uFF0C\u5373\u539F\u6765\u7684\u51FD\u6570\u7684\u539F\u578B\u94FE</span>
  <span class="token keyword">return</span> fBound
<span class="token punctuation">}</span>

<span class="token comment">// test </span>
<span class="token keyword">var</span> <span class="token function-variable function">Person</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>age<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u4E00\u4E2A\u6784\u9020\u51FD\u6570</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">sayName</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span><span class="token string">&#39;bindObj&#39;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span><span class="token string">&#39;24&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> Bound1 <span class="token operator">=</span> Person<span class="token punctuation">.</span><span class="token function">myBind</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;xman&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u521B\u5EFA\u7ED1\u5B9A\u51FD\u6570 ,\u540C\u65F6\u4F7F\u4E00\u4E2A\u51FD\u6570\u62E5\u6709\u9884\u8BBE\u7684\u521D\u59CB\u53C2\u6570\uFF0C\uFF0C\uFF0C\u8FD4\u56DE\u7684\u53EF\u4EE5\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570</span>
<span class="token keyword">var</span> bound1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bound1</span><span class="token punctuation">(</span><span class="token string">&#39;22&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u88AB\u5F53\u505A\u662F\u6784\u9020\u51FD\u6570\u4F7F\u7528\u65F6\uFF0C\u5408\u5E76\u9884\u8BBE\u7684\u53C2\u6570\uFF0C</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bound1<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// &#39;xman&#39;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bound1<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 22</span>
bound1<span class="token punctuation">.</span><span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// xman</span>

<span class="token keyword">var</span> bound2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Bound1</span><span class="token punctuation">(</span><span class="token string">&#39;23&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u5F53\u88AB\u5F53\u505A\u662F\u6784\u9020\u51FD\u6570\u4F7F\u7528\u65F6\uFF0C\u5408\u5E76\u9884\u8BBE\u7684\u53C2\u6570\uFF0C</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bound2<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// &#39;xman&#39;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bound2<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 23</span>
bound2<span class="token punctuation">.</span><span class="token function">sayName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// xman</span>

bound1 <span class="token keyword">instanceof</span> <span class="token class-name">Person</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>
bound1 <span class="token keyword">instanceof</span> <span class="token class-name">Bound1</span><span class="token punctuation">;</span>  <span class="token comment">// true</span>


<span class="token comment">//\u53C2\u8003\u6587\u7AE0 \uFF1A https://juejin.cn/post/7039601703447953416#heading-12</span>

<span class="token comment">// \u751F\u6210\u952E\u540D</span>
<span class="token keyword">function</span> <span class="token function">createUniqueKey</span> <span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> key <span class="token operator">=</span> <span class="token string">&#39;fn&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>obj<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    key <span class="token operator">=</span> <span class="token string">&#39;fn&#39;</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> key<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),o=[e];function c(l,i){return s(),a("div",null,o)}var k=n(p,[["render",c],["__file","bind.js.html.vue"]]);export{k as default};
