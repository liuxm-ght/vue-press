import{_ as n,o as s,c as a,g as p}from"./app.42a0e3cd.js";const t={},e=p(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token doc-comment comment">/**
 * \u603B\u7ED3\uFF1A
 *    1. \u5982\u679C\u662Fnull\u76F4\u63A5\u8FD4\u56DEnull
 *    2. typeof\u7C7B\u578B\u5224\u65AD\u975Eobject\u7C7B\u578B\u7684\u76F4\u63A5\u8FD4\u56DE\u503C\uFF0C
 *    3. isType\u7C7B\u578B\u5224\u65ADArray\\Object\\Function\\RegExp\\Date\u7B49\uFF0C\u7279\u6B8A\u5904\u7406
 *    4. Array:\u521D\u59CB\u5316\u503C\u4E3A[],Date:\u65F6\u95F4\u8F6C\u6362\u4E3A\u6BEB\u79D2\u518D\u8F6C\u4E3ADate,RegExp:\u6839\u636E\u539Fexp\u65B0New RegExp\u65B0\u7684exp,Object\u6216Function\u83B7\u53D6\u5176prototype\u3001\u65B0\u5EFA\u5BF9\u8C61\u7EE7\u627F\u539F\u5BF9\u8C61\uFF1B
 *    5. \u907F\u514D\u5FAA\u73AF\u5F15\u5165\u95EE\u9898\uFF0C\u5229\u7528\u7F13\u5B58\u539F\u7406\uFF0C\u5FAA\u73AF\u5F15\u7528\u7684\u5C5E\u6027\u4ECE\u7F13\u5B58\u91CC\u83B7\u53D6\uFF0C\u7F13\u5B58\u6570\u7EC4\u5206\u4E3A\u65B0\u65E7\u6570\u7EC4\uFF0C\u65E7\u7528\u4E8E\u67E5\u8BE2\uFF0C\u65B0\u7528\u4E8E\u8FD4\u56DE
 *    6. \u904D\u5386\u5C5E\u6027\uFF0C\u9012\u5F52\u5904\u7406\u5C5E\u6027\u503C
*/</span>

<span class="token comment">//\u7EC8\u7ED3\u5B8C\u7F8E\u7248</span>
<span class="token keyword">function</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5904\u7406\u5FAA\u73AF\u5F15\u7528\u95EE\u9898\uFF0Cparents\u4E0Echildren\u4E0B\u6807\u4E00\u4E00\u5BF9\u5E94</span>
  <span class="token keyword">let</span> oldObjs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> newObjs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">function</span> <span class="token function">isType</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u5224\u65ADobj\u662F\u5426\u4E3Atype\u7C7B\u578B</span>
    <span class="token comment">// if (typeof obj !== &#39;object&#39;) return false</span>
    <span class="token comment">// const typeString = Object.prototype.toString.call(obj)</span>
    <span class="token comment">// let flag</span>
    <span class="token comment">// switch (type) {</span>
    <span class="token comment">//   case &#39;Array&#39;:</span>
    <span class="token comment">//     flag = typeString === &#39;[object Array]&#39; </span>
    <span class="token comment">//     break;</span>
    <span class="token comment">//   case &#39;Date&#39;:</span>
    <span class="token comment">//     flag = typeString === &#39;[object Date]&#39; </span>
    <span class="token comment">//     break;</span>
    <span class="token comment">//   case &#39;RegExp&#39;:</span>
    <span class="token comment">//     flag = typeString === &#39;[object RegExp]&#39; </span>
    <span class="token comment">//     break;</span>
    <span class="token comment">//   default:</span>
    <span class="token comment">//     flag = false</span>
    <span class="token comment">//     break;</span>
    <span class="token comment">// }</span>
    <span class="token comment">// return flag</span>
    <span class="token keyword">return</span> Object<span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[object </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">type</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">getRegExp</span><span class="token punctuation">(</span>exp<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u83B7\u53D6\u6B63\u5219\u7684flags</span>
    <span class="token keyword">let</span> flags <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>exp<span class="token punctuation">.</span>global<span class="token punctuation">)</span> flags <span class="token operator">+=</span> <span class="token string">&#39;g&#39;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>exp<span class="token punctuation">.</span>ignoreCase<span class="token punctuation">)</span> flags <span class="token operator">+=</span> <span class="token string">&#39;i&#39;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>exp<span class="token punctuation">.</span>multiline<span class="token punctuation">)</span> flags <span class="token operator">+=</span> <span class="token string">&#39;m&#39;</span>
    <span class="token keyword">return</span> flags
  <span class="token punctuation">}</span>
  <span class="token keyword">function</span> <span class="token function">_clone</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>oldObj <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> oldObj <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> oldObj
    <span class="token keyword">let</span> newObj <span class="token punctuation">,</span> proto
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">,</span><span class="token string">&#39;Array&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u5904\u7406 Array</span>
      newObj <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">,</span><span class="token string">&#39;Date&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u5904\u7406 Date</span>
      newObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">,</span><span class="token string">&#39;RegExp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u5904\u7406 RegExp</span>
      newObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">.</span>source<span class="token punctuation">,</span><span class="token function">getRegExp</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>oldObj<span class="token punctuation">.</span>lastIndex<span class="token punctuation">)</span> newObj<span class="token punctuation">.</span>lastIndex <span class="token operator">=</span> oldObj<span class="token punctuation">.</span>lastIndex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">//\u5904\u7406 Object \u6216 Function</span>
      proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span>
      newObj <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// \u5904\u7406\u5FAA\u73AF\u5F15\u7528\u95EE\u9898\uFF0C\u4E4B\u524D\u6709\u5904\u7406\u8FC7\uFF0C\u76F4\u63A5\u8FD4\u56DE\u7ED3\u679C</span>
    <span class="token keyword">const</span> pIndex <span class="token operator">=</span> oldObjs<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>pIndex <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> newObjs<span class="token punctuation">[</span>pIndex<span class="token punctuation">]</span> <span class="token comment">// \u8FD4\u56DE\u62F7\u8D1D\u540E\u7684\u503C</span>
    <span class="token punctuation">}</span>
    oldObjs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span> <span class="token comment">// \u5229\u7528\u7F13\u5B58\u5904\u7406\u5FAA\u73AF\u5F15\u7528\u95EE\u9898\uFF0C\u65E7\u6570\u7EC4\u5B58\u653E\u65E7\u503C\u7528\u4E8E\u67E5\u8BE2\uFF0C\u4ECE\u65B0\u6570\u7EC4\u8FD4\u56DE\u62F7\u8D1D\u7684\u503C</span>
    newObjs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>newObj<span class="token punctuation">)</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> i <span class="token keyword">in</span> oldObj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        newObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">_clone</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> newObj
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token function">_clone</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * \u89E3\u51B3\u95EE\u9898:
 *  1.\u5BF9\u8C61\u7684\u6784\u9020\u51FD\u6570\u6307\u5411\u9519\u8BEF\u95EE\u9898
 *  2.\u6B63\u5219\u5BF9\u8C61\u65E0\u6CD5\u590D\u5236\u95EE\u9898
 *  3.\u51FD\u6570\u65E0\u6CD5\u590D\u5236\u95EE\u9898(JSON.parse \u4E0E JSON.stringify)
 *  4.\u5FAA\u73AF\u5F15\u7528\u7206\u6808\u95EE\u9898
 *  \u53C2\u8003\u6587\u7AE0\uFF1Ahttps://juejin.cn/post/6844903584023183368#heading-1
*/</span>
  test <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
  <span class="token keyword">function</span> <span class="token function">person</span><span class="token punctuation">(</span>pname<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> pname<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> Messi <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">person</span><span class="token punctuation">(</span><span class="token string">&#39;Messi&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">say</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hi&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> oldObj <span class="token operator">=</span> <span class="token punctuation">{</span>
    a<span class="token operator">:</span> say<span class="token punctuation">,</span>
    c<span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;ab+c&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;i&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    d<span class="token operator">:</span> Messi<span class="token punctuation">,</span>
    e<span class="token operator">:</span> <span class="token punctuation">{</span>
      name<span class="token operator">:</span><span class="token string">&#39;xxxx&#39;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  oldObj<span class="token punctuation">.</span>b <span class="token operator">=</span> oldObj<span class="token punctuation">;</span>
  <span class="token keyword">const</span> newObj <span class="token operator">=</span> <span class="token function">cloneDeep</span><span class="token punctuation">(</span>oldObj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  oldObj<span class="token punctuation">.</span>e<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;yyy&#39;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">.</span>a<span class="token punctuation">,</span> oldObj<span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [Function: say] [Function: say]</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">.</span>b<span class="token punctuation">,</span> oldObj<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { a: [Function: say], c: /ab+c/i, d: person { name: &#39;Messi&#39; }, b: [Circular] } { a: [Function: say], c: /ab+c/i, d: person { name: &#39;Messi&#39; }, b: [Circular] }</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">.</span>c<span class="token punctuation">,</span> oldObj<span class="token punctuation">.</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// /ab+c/i /ab+c/i</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">.</span>d<span class="token punctuation">.</span>constructor<span class="token punctuation">,</span> oldObj<span class="token punctuation">.</span>d<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [Function: person] [Function: person]</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>newObj<span class="token punctuation">.</span>e<span class="token punctuation">,</span> oldObj<span class="token punctuation">.</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { name: &#39;xxxx&#39; } { name: &#39;yyy&#39; }</span>



  <span class="token doc-comment comment">/**
* deep clone
* <span class="token keyword">@param</span>  <span class="token punctuation">{</span>[type]<span class="token punctuation">}</span> parent object \u9700\u8981\u8FDB\u884C\u514B\u9686\u7684\u5BF9\u8C61
* <span class="token keyword">@return</span> <span class="token punctuation">{</span>[type]<span class="token punctuation">}</span>        \u6DF1\u514B\u9686\u540E\u7684\u5BF9\u8C61
*/</span>
<span class="token keyword">const</span> <span class="token function-variable function">clone</span> <span class="token operator">=</span> parent <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u7EF4\u62A4\u4E24\u4E2A\u50A8\u5B58\u5FAA\u73AF\u5F15\u7528\u7684\u6570\u7EC4</span>
  <span class="token keyword">const</span> parents <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token function-variable function">_clone</span> <span class="token operator">=</span> parent <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>parent <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> parent <span class="token operator">!==</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> parent<span class="token punctuation">;</span>

    <span class="token keyword">let</span> child<span class="token punctuation">,</span> proto<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> <span class="token string">&#39;Array&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5BF9\u6570\u7EC4\u505A\u7279\u6B8A\u5904\u7406</span>
      child <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> <span class="token string">&#39;RegExp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5BF9\u6B63\u5219\u5BF9\u8C61\u505A\u7279\u6B8A\u5904\u7406</span>
      <span class="token comment">// child = new RegExp(parent.source, getRegExp(parent));</span>
      child <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>parent<span class="token punctuation">.</span>lastIndex<span class="token punctuation">)</span> child<span class="token punctuation">.</span>lastIndex <span class="token operator">=</span> parent<span class="token punctuation">.</span>lastIndex<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isType</span><span class="token punctuation">(</span>parent<span class="token punctuation">,</span> <span class="token string">&#39;Date&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5BF9Date\u5BF9\u8C61\u505A\u7279\u6B8A\u5904\u7406</span>
      child <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5904\u7406\u5BF9\u8C61\u539F\u578B</span>
      proto <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">// \u5229\u7528Object.create\u5207\u65AD\u539F\u578B\u94FE</span>
      child <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>proto<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5904\u7406\u5FAA\u73AF\u5F15\u7528</span>
    <span class="token keyword">const</span> index <span class="token operator">=</span> parents<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u7236\u6570\u7EC4\u5B58\u5728\u672C\u5BF9\u8C61,\u8BF4\u660E\u4E4B\u524D\u5DF2\u7ECF\u88AB\u5F15\u7528\u8FC7,\u76F4\u63A5\u8FD4\u56DE\u6B64\u5BF9\u8C61</span>
      <span class="token keyword">return</span> children<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    parents<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    children<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u9012\u5F52</span>
      child<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">_clone</span><span class="token punctuation">(</span>parent<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> child<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token function">_clone</span><span class="token punctuation">(</span>parent<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),o=[e];function c(l,i){return s(),a("div",null,o)}var k=n(t,[["render",c],["__file","de.js.html.vue"]]);export{k as default};
