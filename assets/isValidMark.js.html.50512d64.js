import{_ as n,o as s,c as a,e as p}from"./app.68e824a5.js";const t={},e=p(`<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>
<span class="token comment">/*
  27 
  \u624B\u5199-\u5224\u65AD\u62EC\u53F7\u5B57\u7B26\u4E32\u662F\u5426\u6709\u6548\uFF08\u5C0F\u7C73\uFF09
    \u9898\u76EE\u63CF\u8FF0
    \u7ED9\u5B9A\u4E00\u4E2A\u53EA\u5305\u62EC &#39;(&#39;\uFF0C&#39;)&#39;\uFF0C&#39;{&#39;\uFF0C&#39;}&#39;\uFF0C&#39;[&#39;\uFF0C&#39;]&#39; \u7684\u5B57\u7B26\u4E32 s \uFF0C\u5224\u65AD\u5B57\u7B26\u4E32\u662F\u5426\u6709\u6548\u3002

    \u6709\u6548\u5B57\u7B26\u4E32\u9700\u6EE1\u8DB3\uFF1A
        \u5DE6\u62EC\u53F7\u5FC5\u987B\u7528\u76F8\u540C\u7C7B\u578B\u7684\u53F3\u62EC\u53F7\u95ED\u5408\u3002
        \u5DE6\u62EC\u53F7\u5FC5\u987B\u4EE5\u6B63\u786E\u7684\u987A\u5E8F\u95ED\u5408
      \u53C2\u8003\u6587\u7AE0\uFF1Ahttps://juejin.cn/post/7004638318843412493

    \u89E3\u9898\u4FE1\u606F\u4E2D\u7684\u7B2C2\u6761\u5F3A\u8C03\u5BF9\u79F0\u6027\uFF0C\u800C\u6808\uFF08\u540E\u5165\u5148\u51FA\uFF09\u5165\u6808\u548C\u51FA\u6808\u6070\u597D\u662F\u53CD\u7740\u6765\uFF0C\u5F62\u6210\u4E86\u9C9C\u660E\u7684\u5BF9\u79F0\u6027\u3002
 */</span>
<span class="token comment">//\u6808\u89E3\u9898\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">isValidMark</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span> str<span class="token punctuation">.</span>length <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token keyword">let</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    markMap <span class="token operator">=</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&#39;{&#39;</span><span class="token operator">:</span><span class="token string">&#39;}&#39;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;(&#39;</span><span class="token operator">:</span><span class="token string">&#39;)&#39;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;[&#39;</span><span class="token operator">:</span><span class="token string">&#39;]&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> str<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;{&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;(&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;[&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u5DE6\u7B26\u53F7\u585E\u5165 stack</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span> <span class="token comment">//\u53F3\u7B26\u5408 \u4ECEstack\u62FF\u51FA\u6700\u540E\u4E00\u4E2A\u5339\u914D\u662F\u5426\u4E3A\u5BF9\u5E94\u5DE6\u7B26\u53F7\uFF0C\u5426 false\uFF0C\u662F\u7EE7\u7EED\uFF0C\u76F4\u5230stack\u88AB\u6E05\u7A7A</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span> str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> markMap<span class="token punctuation">[</span>stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>stack<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span> 
  <span class="token keyword">return</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u66B4\u529B\u6D88\u9664\u6CD5</span>
<span class="token keyword">const</span> <span class="token function-variable function">isValid</span> <span class="token operator">=</span> <span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> len <span class="token operator">=</span> s<span class="token punctuation">.</span>length
    <span class="token comment">// \u5C06\u5B57\u7B26\u4E32\u6309\u7167\u5339\u914D\u5BF9\uFF0C\u6328\u4E2A\u66FF\u6362\u4E3A&#39;&#39;</span>
    s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;{}&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;[]&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;()&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
    <span class="token comment">// \u6709\u4E24\u79CD\u60C5\u51B5s.length\u4F1A\u7B49\u4E8Elen</span>
    <span class="token comment">// 1. s\u5339\u914D\u5B8C\u4E86\uFF0C\u53D8\u6210\u4E86\u7A7A\u5B57\u7B26\u4E32</span>
    <span class="token comment">// 2. s\u65E0\u6CD5\u7EE7\u7EED\u5339\u914D\uFF0C\u5BFC\u81F4\u5176\u957F\u5EA6\u548C\u4E00\u5F00\u59CB\u7684len\u4E00\u6837\uFF0C\u6BD4\u5982({],\u4E00\u5F00\u59CBlen\u662F3\uFF0C\u5339\u914D\u5B8C\u8FD8\u662F3\uFF0C\u8BF4\u660E\u4E0D\u7528\u7EE7\u7EED\u5339\u914D\u4E86\uFF0C\u7ED3\u679C\u5C31\u662Ffalse</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>length <span class="token operator">===</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> len <span class="token operator">===</span> <span class="token number">0</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">isValidMark</span><span class="token punctuation">(</span><span class="token string">&#39;{{([])()[]{}}}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* 
  28 \u624B\u5199-\u67E5\u627E\u6570\u7EC4\u516C\u5171\u524D\u7F00\uFF08\u7F8E\u56E2\uFF09
    \u9898\u76EE\u63CF\u8FF0
      \u7F16\u5199\u4E00\u4E2A\u51FD\u6570\u6765\u67E5\u627E\u5B57\u7B26\u4E32\u6570\u7EC4\u4E2D\u7684\u6700\u957F\u516C\u5171\u524D\u7F00\u3002
      \u5982\u679C\u4E0D\u5B58\u5728\u516C\u5171\u524D\u7F00\uFF0C\u8FD4\u56DE\u7A7A\u5B57\u7B26\u4E32 &quot;&quot;\u3002

      \u793A\u4F8B 1\uFF1A

      \u8F93\u5165\uFF1Astrs = [&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]
      \u8F93\u51FA\uFF1A&quot;fl&quot;

      \u793A\u4F8B 2\uFF1A

      \u8F93\u5165\uFF1Astrs = [&quot;dog&quot;,&quot;racecar&quot;,&quot;car&quot;]
      \u8F93\u51FA\uFF1A&quot;&quot;
      \u89E3\u91CA\uFF1A\u8F93\u5165\u4E0D\u5B58\u5728\u516C\u5171\u524D\u7F00\u3002
*/</span>

<span class="token keyword">function</span> <span class="token function">longestCommonPrefix</span><span class="token punctuation">(</span>strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> str0 <span class="token operator">=</span> strs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">//\u4EE5\u7B2C\u4E00\u4E2A\u5143\u7D20\u4E3A\u57FA\u51C6\uFF0C\u5229\u7528index\u6307\u9488\u63A7\u5236\uFF0C\u5982\u679C\u5176\u4ED6\u5143\u7D20index\u4F4D\u7F6E\u524D\u7684\u5B57\u7B26\u4E32\u4E0E\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684\u4E0D\u5339\u914D\u76F4\u63A5rutrun</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> str0<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> curStr <span class="token operator">=</span> str0<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">//\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684index\u4F4D\u7F6E\u524D\u7684\u5B57\u7B26\u4E32</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> strs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>strs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token operator">!</span>strs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>curStr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//\u662F\u5426\u4EE5\u7B2C\u4E00\u4E2A\u5143\u7D20\u7684index\u4F4D\u7F6E\u524D\u7684\u5B57\u7B26\u4E32\u5F00\u5934</span>
        <span class="token keyword">return</span> str0<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>index<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    index<span class="token operator">++</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> str0 <span class="token comment">//\u4EC5\u6709\u4E00\u4E2A\u5143\u7D20\uFF0C\u6216\u6240\u6709\u5143\u7D20\u90FD\u4E00\u6837\u65F6</span>
<span class="token punctuation">}</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">longestCommonPrefix</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;zxiaoming&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;xiaodong&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;xiaoling&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">/* 
29 \u624B\u5199-\u5B57\u7B26\u4E32\u6700\u957F\u7684\u4E0D\u91CD\u590D\u5B50\u4E32
  \u9898\u76EE\u63CF\u8FF0
    \u7ED9\u5B9A\u4E00\u4E2A\u5B57\u7B26\u4E32 s \uFF0C\u8BF7\u4F60\u627E\u51FA\u5176\u4E2D\u4E0D\u542B\u6709\u91CD\u590D\u5B57\u7B26\u7684 \u6700\u957F\u5B50\u4E32 \u7684\u957F\u5EA6\u3002

    \u793A\u4F8B 1:
    \u8F93\u5165: s = &quot;abcabcbb&quot;
    \u8F93\u51FA: 3
    \u89E3\u91CA: \u56E0\u4E3A\u65E0\u91CD\u590D\u5B57\u7B26\u7684\u6700\u957F\u5B50\u4E32\u662F &quot;abc&quot;\uFF0C\u6240\u4EE5\u5176\u957F\u5EA6\u4E3A 3\u3002

    \u793A\u4F8B 2:
    \u8F93\u5165: s = &quot;bbbbb&quot;
    \u8F93\u51FA: 1
    \u89E3\u91CA: \u56E0\u4E3A\u65E0\u91CD\u590D\u5B57\u7B26\u7684\u6700\u957F\u5B50\u4E32\u662F &quot;b&quot;\uFF0C\u6240\u4EE5\u5176\u957F\u5EA6\u4E3A 1\u3002

    \u793A\u4F8B 3:
    \u8F93\u5165: s = &quot;pwwkew&quot;
    \u8F93\u51FA: 3
    \u89E3\u91CA: \u56E0\u4E3A\u65E0\u91CD\u590D\u5B57\u7B26\u7684\u6700\u957F\u5B50\u4E32\u662F &quot;wke&quot;\uFF0C\u6240\u4EE5\u5176\u957F\u5EA6\u4E3A 3\u3002
        \u8BF7\u6CE8\u610F\uFF0C\u4F60\u7684\u7B54\u6848\u5FC5\u987B\u662F \u5B50\u4E32 \u7684\u957F\u5EA6\uFF0C&quot;pwke&quot; \u662F\u4E00\u4E2A\u5B50\u5E8F\u5217\uFF0C\u4E0D\u662F\u5B50\u4E32\u3002

    \u793A\u4F8B 4:
    \u8F93\u5165: s = &quot;&quot;
    \u8F93\u51FA: 0
*/</span>

<span class="token keyword">function</span> <span class="token function">unRepeatStr</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> unRepeatObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
      index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
      len <span class="token operator">=</span> str<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
      unRepeatStr <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
      unRepeatArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>unRepeatObj<span class="token punctuation">[</span>str<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token comment">// unRepeatObj[str[index]]++</span>
      unRepeatArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>unRepeatStr<span class="token punctuation">)</span>
      unRepeatObj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
      unRepeatObj<span class="token punctuation">[</span>str<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
      unRepeatStr <span class="token operator">=</span> <span class="token string">&#39;&#39;</span>
      unRepeatStr <span class="token operator">=</span> str<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      unRepeatObj<span class="token punctuation">[</span>str<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>
      unRepeatStr <span class="token operator">+=</span> str<span class="token punctuation">[</span>index<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    index<span class="token operator">++</span>
  <span class="token punctuation">}</span>
  unRepeatArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>unRepeatStr<span class="token punctuation">)</span>
  <span class="token keyword">return</span> unRepeatArr
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">unRepeatStr</span><span class="token punctuation">(</span><span class="token string">&quot;aaabbbabcbcdcdef&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">lengthOfLongestSubstring</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">0</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
      right <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
      max <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>right <span class="token operator">&lt;=</span> str<span class="token punctuation">.</span>length <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> ls <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span>right<span class="token punctuation">)</span><span class="token punctuation">,</span>
        index <span class="token operator">=</span> ls<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>right<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">//ls \u4E2D\u5B58\u5728\u76F8\u540C\u5B57\u7B26</span>
      left <span class="token operator">=</span> left <span class="token operator">+</span> index <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">//ls \u4E2D\u4E0D\u5B58\u5728\u76F8\u540C\u5B57\u7B26</span>
      ls <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>left<span class="token punctuation">,</span>right<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>
      max <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>max<span class="token punctuation">,</span>ls<span class="token punctuation">.</span>length<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    right<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> max
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">lengthOfLongestSubstring</span><span class="token punctuation">(</span><span class="token string">&quot;aaabcdabcdcdcdef&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">/* 
30 \u624B\u5199-\u5982\u4F55\u627E\u5230\u6570\u7EC4\u4E2D\u7B2C\u4E00\u4E2A\u6CA1\u51FA\u73B0\u7684\u6700\u5C0F\u6B63\u6574\u6570 \u600E\u4E48\u4F18\u5316\uFF08\u5B57\u8282\uFF09
  \u7ED9\u4F60\u4E00\u4E2A\u672A\u6392\u5E8F\u7684\u6574\u6570\u6570\u7EC4 nums \uFF0C\u8BF7\u4F60\u627E\u51FA\u5176\u4E2D\u6CA1\u6709\u51FA\u73B0\u7684\u6700\u5C0F\u7684\u6B63\u6574\u6570\u3002
    \u8BF7\u4F60\u5B9E\u73B0\u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(n) \u5E76\u4E14\u53EA\u4F7F\u7528\u5E38\u6570\u7EA7\u522B\u989D\u5916\u7A7A\u95F4\u7684\u89E3\u51B3\u65B9\u6848\u3002

    \u793A\u4F8B 1\uFF1A
    \u8F93\u5165\uFF1Anums = [1,2,0]
    \u8F93\u51FA\uFF1A3

    \u793A\u4F8B 2\uFF1A
    \u8F93\u5165\uFF1Anums = [3,4,-1,1]
    \u8F93\u51FA\uFF1A2

    \u793A\u4F8B 3\uFF1A
    \u8F93\u5165\uFF1Anums = [7,8,9,11,12]
    \u8F93\u51FA\uFF1A1
    \u8FD9\u662F\u4E00\u9053\u5B57\u8282\u7684\u7B97\u6CD5\u9898 \u76EE\u7684\u5728\u4E8E\u4E0D\u65AD\u5730\u53BB\u4F18\u5316\u7B97\u6CD5\u601D\u8DEF
*/</span>
<span class="token comment">//\u7B2C\u4E00\u7248 O(n^2) \u7684\u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">firstMissingPositive</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
      res <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>res <span class="token operator">==</span> arr<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      res<span class="token operator">++</span>
      index <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
      index<span class="token operator">++</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span>


<span class="token comment">//\u7B2C\u4E8C\u7248 \u65F6\u95F4\u7A7A\u95F4\u5747\u4E3A O(n)</span>
<span class="token keyword">function</span> <span class="token function">firstMissingPositive</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">const</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> nums<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>set<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">//\u6700\u7EC8\u7248 \u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(n) \u5E76\u4E14\u53EA\u4F7F\u7528\u5E38\u6570\u7EA7\u522B\u7A7A\u95F4</span>
<span class="token keyword">function</span> <span class="token function">firstMissingPositive</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>
      nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span>
      nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> nums<span class="token punctuation">.</span>length <span class="token operator">&amp;&amp;</span> <span class="token comment">// \u5BF91~nums.length\u8303\u56F4\u5185\u7684\u5143\u7D20\u8FDB\u884C\u5B89\u6392</span>
      nums<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">!==</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token comment">// \u5DF2\u7ECF\u51FA\u73B0\u5728\u7406\u60F3\u4F4D\u7F6E\u7684\uFF0C\u5C31\u4E0D\u7528\u4EA4\u6362</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> temp <span class="token operator">=</span> nums<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u4EA4\u6362</span>
      nums<span class="token punctuation">[</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u73B0\u5728\u671F\u5F85\u7684\u662F [1,2,3,...]\uFF0C\u5982\u679C\u904D\u5386\u5230\u4E0D\u662F\u653E\u7740\u8BE5\u653E\u7684\u5143\u7D20</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> nums<span class="token punctuation">.</span>length <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// \u53D1\u73B0\u5143\u7D20 1~nums.length \u5360\u6EE1\u4E86\u6570\u7EC4\uFF0C\u4E00\u4E2A\u6CA1\u7F3A</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">firstMissingPositive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">//31 \u624B\u5199-\u600E\u4E48\u5728\u5236\u5B9A\u6570\u636E\u6E90\u91CC\u9762\u751F\u6210\u4E00\u4E2A\u957F\u5EA6\u4E3A n \u7684\u4E0D\u91CD\u590D\u968F\u673A\u6570\u7EC4 \u80FD\u6709\u51E0\u79CD\u65B9\u6CD5 \u65F6\u95F4\u590D\u6742\u5EA6\u591A\u5C11\uFF08\u5B57\u8282\uFF09</span>
<span class="token comment">//\u7B2C\u4E00\u7248 \u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(n^2)</span>
<span class="token keyword">function</span> <span class="token function">getTenNum</span><span class="token punctuation">(</span>testArray<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> testArray<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;i&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> random <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> testArray<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> cur <span class="token operator">=</span> testArray<span class="token punctuation">[</span>random<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      i<span class="token operator">--</span><span class="token punctuation">;</span>
      <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> testArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> resArr <span class="token operator">=</span> <span class="token function">getTenNum</span><span class="token punctuation">(</span>testArray<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>resArr<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u7B2C\u4E8C\u7248 \u6807\u8BB0\u6CD5 / \u81EA\u5B9A\u4E49\u5C5E\u6027\u6CD5 \u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(n)</span>
<span class="token keyword">function</span> <span class="token function">getTenNum</span><span class="token punctuation">(</span>testArray<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> hash <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> ranNum <span class="token operator">=</span> n<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>ranNum <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> ran <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> testArray<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hash<span class="token punctuation">[</span>ran<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      hash<span class="token punctuation">[</span>ran<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>ran<span class="token punctuation">)</span><span class="token punctuation">;</span>
      ranNum<span class="token operator">--</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> testArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> resArr <span class="token operator">=</span> <span class="token function">getTenNum</span><span class="token punctuation">(</span>testArray<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u7B2C\u4E09\u7248 \u4EA4\u6362\u6CD5 \u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(n)</span>
<span class="token keyword">function</span> <span class="token function">getTenNum</span><span class="token punctuation">(</span>testArray<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> cloneArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>testArray<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">debugger</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> ran <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>cloneArr<span class="token punctuation">.</span>length <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cloneArr<span class="token punctuation">[</span>ran<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    cloneArr<span class="token punctuation">[</span>ran<span class="token punctuation">]</span> <span class="token operator">=</span> cloneArr<span class="token punctuation">[</span>cloneArr<span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> testArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> resArr <span class="token operator">=</span> <span class="token function">getTenNum</span><span class="token punctuation">(</span>testArray<span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u6700\u7EC8\u7248 \u8FB9\u904D\u5386\u8FB9\u5220\u9664 \u65F6\u95F4\u590D\u6742\u5EA6\u4E3A O(n)</span>
<span class="token keyword">function</span> <span class="token function">getTenNum</span><span class="token punctuation">(</span>testArray<span class="token punctuation">,</span> n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> cloneArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>testArray<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> random <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> cloneArr<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> cur <span class="token operator">=</span> cloneArr<span class="token punctuation">[</span>random<span class="token punctuation">]</span><span class="token punctuation">;</span>
    result<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>cur<span class="token punctuation">)</span><span class="token punctuation">;</span>
    cloneArr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>random<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> testArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> resArr <span class="token operator">=</span> <span class="token function">getTenNum</span><span class="token punctuation">(</span>testArray<span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),o=[e];function c(l,u){return s(),a("div",null,o)}var k=n(t,[["render",c],["__file","isValidMark.js.html.vue"]]);export{k as default};
